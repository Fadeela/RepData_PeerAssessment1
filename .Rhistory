library("swirl")
swirl()
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds, binwidth=18497/30)
brk
counts
qplot(price,data=diamonds, binwidth=18497/30, fill = cut)
qplot(price,data=diamonds, geom = "density",)
qplot(price,data=diamonds, geom = "density",color=cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds,shape=cut)
qplot(carat, price, data = diamonds,color=cut)
qplot(carat, price, data = diamonds,color=cut, geom=c("point","smooth"), method="lm")
qplot(carat, price, data = diamonds,color=cut, geom=c("point","smooth"), method="lm")
qplotReal <- qplot # Copies the function
qplot <- function(...,method="deprecated"){
qplotReal(...)
}
qplotReal(carat, price, data = diamonds,color=cut, geom=c("point","smooth"), method="lm")
skip()
skip()
g <- ggplot(diamonds, aes(depth, print))
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(1, alpha(=1/3))
g + geom_point(1, alpha=1/3)
g + geom_point(aes(1, alpha=1/3)
)
g + geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,length=4), na.rm=TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth,price))
g + geom_point(alpha= 1/3) +facet_grid(cut ~car2)
diamonds[myd,]
g + geom_point(alpha= 1/3) +facet_grid(cut ~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
library(ggplot2)
library("ggplot2")
?ggplot
??geom
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
hc
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=.4,col="red")
5
5
9
12
abline(h=.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix, cm.colors(25))
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col=c("red","orange","purple"), pch=3, cex=2. lwd=2)
points(cx, cy, col=c("red","orange","purple"), pch=3, cex=2, lwd=2)
mdist
mdist(c,x,cx,cy)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx, newCy,col=cols1, pch=8, cex=2, lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19, cex=2, col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame,3)
kmobj$iter
kmObj$iter
plot(x, y, col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col= c("black", "red", "green"), pch=3, cex=3, lwd=3)
plot(x, y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source(filename ="addPatt.R", local=TRUE)
source(filename =("addPatt.R"), local=TRUE)
source(filename ("addPatt.R"), local=TRUE)
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% t(matv)
matu %*% diag %*% t(matv)
scale(mat,svd)
scale(svd(mat))
skip()
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$SVD
svd2$v[,1:2]
svd2$d
dim(faceData)
skip()
myImage(a`)
myImage(a1)
a2 <- svd1$u[,1:2] %*% svd1$v[,1:2] %*% diag %*% svd1$d[1:2]
a2 <- svd1$u[1:2] %*% svd1$v[1:2] %*% diag %*% svd1$d[1:2]
a2 <- svd1$u[,1:2] %*% t(svd1$v[,1:2]) %*% diag %*% svd1$d[1:2]
skip()
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:5] %*%  diag(svd1$d[1:2])  %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:5] %*%  diag(svd1$d[1:5])  %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*%  diag(svd1$d[1:10])  %*% t(svd1$v[,1:10]))
ssd
library(swirl)
swirl()
dim(ssd)
bye()
swirl()
main()
main()
main()
main()
names(ssd[,562:563])
table(ssd$subject)
sum(ttable(ssd$subject))
sum(table(ssd$subject))
table(ssd$activity)
skip()
dim(sub1\)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
skip()
hclustring <- hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity) )
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
skip()
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1(,-c(562,563)), centers = 6)
kClust <- kmeans(sub1[],-c(562,563)], centers = 6)
skip()
table(kClust$cluster, sub1$activity)
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
dat <- read.csv("activity.csv")
setwd("C:/Users/Fadhila/RepData_PeerAssessment1")
dat <- read.csv("activity.csv")
class(dat$date)
class(dat$steps)
class(dat$interval)
dat$date <- as.Date(dat$date, format="%Y-%m-%d")
class(dat$date)
totalstps <- aggregate(steps ~ date, data=dat, FUN = sum)
hist(totalstps$steps, main = " Steps per Day", col = "Blue", xlab = "Averge Steps per Day")
mean(totalstps$steps)
median(totalstps$steps)
newdata <- tapply(dat$steps, dat$interval, mean, na.rm=TRUE)
plot(newdata, type = "l", xlab = "5-minute interval",
ylab = "Averge across all days", col="brown")
names(which.max(newdata))
sum(is.na(dat))
mean(dat$steps, na.rm=TRUE)
mean(dat$interval, na.rm=TRUE)
newd <- dat
?head
dat[286:293,]
newd$interval[is.na(newd$interval)] <- mean(newd$interval, na.rm=TRUE)
sum(is.na(newd))
newd[286:293,]
mean(newd$interval, na.rm=TRUE)
newd$interval[is.na(newd$interval)]
newd$interval[is.na(newd$interval)] = mean(newd$interval, na.rm=TRUE)
sum(is.na(newd))
newdata[286:293,]
head(newdata)
?melt
newd$interval[is.na(newd$interval)] <- mean(newd$interval)
newdata[286:293,]
head(newdata)
newd[286:293,]
dat <- read.csv("activity.csv")
newd <- dat
newd$interval[is.na(newd$interval)] <- mean(newd$interval)
newd[286:293,]
head(newd)
intervalmean <- mean(dat$interval, na.rm=TRUE)
head(intervalmean)
newd$steps[is.na(newd$steps)] <- intervalmean[newd$steps]
mean(dat$interval, na.rm=TRUE)
mean(newd$interval)
newd$steps[is.na(newd$steps)]
newd$steps[is.na(newd$steps)] <- mean(newd$interval, na.rm = TRUE)
sum(is.na(newd))
newd[289:293,]
newd[283:293,]
newstps <- aggregate(steps ~ date, data=newd, FUN = sum)
hist(newd$steps, main = " Steps per Day", col = "Blue", xlab = "Averge Steps per Day")
mean(newd$steps)
median(newd$steps)
head(totalstps)
head(newd)
head(newstps)
hist(newstps$steps, main = " Steps per Day", col = "Green", xlab = "Averge Steps per Day")
newd$steps[is.na(newd$steps)] <- subset(StepsAverage, interval == obs$interval)$steps
stepsAverage <- aggregate(steps ~ interval, data=newd, FUN = mean)
head(stepsAverage)
newd$steps[is.na(newd$steps)] <- subset(stepsAverage, interval == newd$interval)$steps
sum(is.na(newd))
newd[283:293]
newd[283:293,]
dat <- read.csv("activity.csv")
dat$date <- as.Date(dat$date, format="%Y-%m-%d")
newd <- dat
stepsAverage <- aggregate(steps ~ interval, data=newd, FUN = mean)
newd$steps[is.na(newd$steps)] <- subset(stepsAverage, interval == newd$interval)$steps
sum(is.na(newd))
head(stepsAverage)
dat <- read.csv("activity.csv")
dat$date <- as.Date(dat$date, format="%Y-%m-%d")
stepsAverage <- aggregate(steps ~ interval, data=newd, FUN = mean)
fillNA <- numeric()
for (i in 1:nrow(dat)) {
newdf <- dat[i,]
if (is.na(newdf$steps)){
steps <- subset(stepsAverage, interval == newdf$interval)$steps
} else {
steps <- newdf$steps
}
fillNA <- c(fillNA,steps)
}
newdat <- dat
newdat$steps <- fillNA
head(newdat)
newstps <- aggregate(steps ~ date, data=newdat, FUN = sum)
hist(newstps$steps, main = " Steps per Day", col = "Green", xlab = "Averge Steps per Day")
hist(newstps$steps, main = " Steps per Day", col = "Green", xlab = "Averge Steps per Day")
mean(newdat$steps)
median(newdat$steps)
mean(newstps$steps)
median(newstps$steps)
head(newstps)
head(newdat)
class(newdat$date)
weekdays1 <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
newdat$wDay <- factor(weekdays(newdat$date) %in% weekdays1)
,levels=c(FALSE, TRUE), labels=c("Weekend", "weekday")
newdat$wDay <- factor(weekdays(newdat$date) %in% weekdays1),
levels=c(FALSE, TRUE), labels=c("Weekend", "weekday")
weekdays1 <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
newdat$wDay <- factor((weekdays(newdat$date) %in% weekdays1),
levels=c(FALSE, TRUE), labels=c("Weekend", "weekday"))
head(newdat)
newdat[1:10,]
newdat[1896:1899,]
newdat[1543:1547,]
newdat[1400:1453,]
newdat[1125:1127,]
newdat[835:837,]
?weekdays
newdat[,"weekday"]
newdat[,"wDay$weekday"]
newdat[,"wDay"]
newdat$wDay <- factor((weekdays(newdat$date) %in% weekdays1),
levels=c(TRUE, FALSE), labels=c("Weekend", "weekday"))
head(newdat)
newdat[1896:1899,]
newdat$wDay <- factor((weekdays(newdat$date) %in% weekdays1),
labels=c("Weekend", "weekday"))
?factor
newdat$wDay <- factor((weekdays(newdat$date) %in% weekdays1),
levels=TRUE, labels=c("Weekend", "weekday"))
newdat$wDay <- factor((weekdays(newdat$date) %in% weekdays1),
levels=c(FALSE, TRUE), labels=c("Weekend", "weekday"))
head(newdat)
newdat[1896:1899,]
newdat$date <- as.Date(newdat$date)
newdat$wDay <- factor((weekdays(newdat$date) %in% weekdays1),
levels=c(FALSE, TRUE), labels=c("Weekend", "weekday"))
head(newdat)
newdat[1896:1899,]
newdat$wDay <- c("Weekend", "weekday")[(weekdays(newdat$date) %in% weekdays1)+1L]
head(newdat)
newdat[1896:1899,]
newdat$wDay <- newdat$date %in% weekend
newdat$wDay <- newdat$date %in% weekdays
install.packages(timeDate)
library(timeDate)
isWeekday(newdat$date, wday=1:5)
install.packages("timeDate")
library(timeDate)
isWeekday(newdat$date, wday=1:5)
newdat$wDay <- c("Weekend", "weekday")[(weekdays(newdat$date) %in% weekdays1)+1L]
head(newdat)
newdat[1896:1899,]
newdat$wDay <-        factor((weekdays(newdat$date) %in% weekdays1),
levels=c(FALSE, TRUE), labels=c("Weekday", "weekend"))
head(newdat)
newdat[1896:1899,]
newdat$wDay <-        factor((weekdays(newdat$date) %in% weekdays1),
levels=c(FALSE, TRUE))
newdat[1896:1899,]
head(newdat)
newdat$wDay <-        factor((weekdays(newdat$date) %in% weekdays1))
head(newdat)
newdat[1896:1899,]
Sys.Date()
Sys.time()
newdat[1684:1686,]
class(newdat$date)
isWeekday(newdat$date, wday=1:5)
newdat$wDay <-  isWeekday(newdat$date, wday=1:5),
levels=c(FALSE, TRUE), labels = c("Weekend", "Weekday"))
newdat$wDay <-  factor(weekdays(newdat$date),
levels=c(FALSE, TRUE), labels = c("Weekend", "Weekday"))
head(newdat)
newdat$wDay <- isWeekday(newdat$date, wday=1:5)
head(newdat)
newdat[1896:1899,]
?wday
newdat[1684:1686,]
newdat[2452:2455,]
?isWeekday
if (as.logical(today)) {
print("Y")
} else print("N")
if (as.logical(newdat$wDay)) {
print("Weekday")
} else print("Weekend")
for (i in 1:ncol(newdat$wDay)) {
if (as.logical(newdat$wDay)) {
print("Weekday")
} else print("Weekend")
}
for (i in 1:nrow(newdat)) {
if (as.logical(newdat$wDay)) {
print("Weekday")
} else print("Weekend")
}
for (i in 1:nrow(newdat)) {
if (as.logical(newdat$wDay)) {
print("Weekday")
} else { print("Weekend")
} newdat <- c(newdat, wDay)
}
for (i in 1:nrow(newdat)) {
if (as.logical(newdat$wDay)) {
print("Weekday")
} else { print("Weekend")
}
head(newdat)
}
x <- for (i in 1:nrow(newdat)) {
if (as.logical(newdat$wDay)) {
print("Weekday")
} else  print("Weekend")
}
newdat$wDay <- isWeekday(newdat$date, wday=1:5) {
for (i in 1:nrow(newdat)) {
if (as.logical(newdat$wDay)) {
print("Weekday")
} else  print("Weekend")
}}
for (i in 1:ncol(newdat$date)) {
if (as.logical(newdat$wDay)) {
print("Weekday")
} else  print("Weekend")
}
newdat$wDay <- ifelse(newdat$wDay == TRUE, "Weekday", "Weekend")
head(newdat)
newdat[1896:1899,]
plot(newdata, type = "l", xlab = "5-minute interval",
ylab = "Averge across all days", col="brown")
paneldata <- tapply(newdat$steps, newdat$interval, mean, na.rm=TRUE)
head(paneldata)
library(lattice)
xyplot(steps ~ interval| factor(wDay), data = newdat, type = "l")
?xyplot
par(mfrow=c(1,2))
xyplot(steps ~ interval| factor(wDay), data = newdat, type = "l")
par(mfrow=c(2,1))
xyplot(steps ~ interval| factor(wDay), data = newdat, type = "l")
xyplot(steps ~ interval| factor(wDay), data = newdat, type = "l", layout=c(2,1))
plot1 <- xyplot(steps ~ interval| factor(wDay), data = newdat, type = "l", layout=c(1,2))
plot(plot1, packet.panel=packet.panel.bycolumn)
plot1 <- xyplot(steps ~ interval| factor(wDay), data = newdat, type = "l", layout=c(2,1))
plot(plot1, packet.panel=packet.panel.bycolumn)
xyplot(steps ~ interval| factor(wDay), data = newdat, type = "l", layout=c(2,1))
xyplot(steps ~ interval| factor(wDay), data = newdat, type = "l", layout=c(1,2))
head(newdat)
s <- split(newdat, newdat$wDay)
head(s)
s1 <- split(newdat, newdat$wDay)
s1[1:10,]
head(s)
x <- split(newdat, newdat$wDay)
head(x)
n <- sapply(x, takeMeans)
n <- sapply(x, mean)
xyplot(wday ~ interval+steps| factor(wDay), data = newdat, type = "l", layout=c(1,2))
paneldat <- aggregate(steps ~ interval + wDay, data = newdat, FUN=mean)
head(paneldat)
xyplot(steps ~ interval| factor(wDay), data = paneldat, type = "l", layout=c(1,2))
xyplot(steps ~ interval| factor(wDay), data = paneldata, type = "l", layout=c(1,2))
names(which.max(newdata))
which.max(newdata)
